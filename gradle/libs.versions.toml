[versions]
agp = "8.2.2"
android-compileSdk = "34"
android-minSdk = "24"
android-targetSdk = "34"
androidx-activityCompose = "1.9.1"
androidx-material = "1.12.0"
compose-plugin = "1.6.11"
desugar_jdk_libs = "2.1.1"
kotlin = "2.0.20"

ktor = "2.3.12"
datastore = "1.1.1"
koin = "4.0.0"
voyager = "1.1.0-beta02"
moko = "0.24.1"
detekt = "1.23.6"
sqldelight = "2.0.2"
coil = "3.0.0-alpha10"
lifecycle = "2.8.4"
compose-settings = "2.4.0"
buildkonfig = "0.15.2"
reveal = "3.0.8"

[libraries]
desugar_jdk_libs = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugar_jdk_libs" }
androidx-material = { group = "com.google.android.material", name = "material", version.ref = "androidx-material" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-splashscreen = { module = "androidx.core:core-splashscreen", version = "1.1.0-rc01" }
immutable-collections = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version = "0.3.7" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version = "0.6.1" }

ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }

datastore-core = { module = "androidx.datastore:datastore", version.ref = "datastore" }
datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }

koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-core-viewmodel = { module = "io.insert-koin:koin-core-viewmodel", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-android-compat = { module = "io.insert-koin:koin-android-compat", version.ref = "koin" }

voyager-navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyager" }
voyager-transitions = { module = "cafe.adriel.voyager:voyager-transitions", version.ref = "voyager" }

moko-resources-generator = { module = "dev.icerock.moko:resources-generator", version.ref = "moko" }
moko-resources = { module = "dev.icerock.moko:resources", version.ref = "moko" }
moko-resources-compose = { module = "dev.icerock.moko:resources-compose", version.ref = "moko" }

detekt-gradle-plugin = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt"}
detekt-formatter = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt"}
detekt-rules-compose = { module = "io.nlopez.compose.rules:detekt", version = "0.3.13" }

sqldelight-driver-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight-driver-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }

logger = { module = "de.halfbit:logger", version = "0.6" }

coil-core = { module = "io.coil-kt.coil3:coil", version.ref = "coil" }
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil-compose-core = { module = "io.coil-kt.coil3:coil-compose-core", version.ref = "coil" }
coil-network-ktor = { module = "io.coil-kt.coil3:coil-network-ktor2", version.ref = "coil" }

lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "lifecycle" }

qr-code = { module = "io.github.alexzhirkevich:qrose", version = "1.0.1" }

compose-constraintlayout = { module = "tech.annexflow.compose:constraintlayout-compose-multiplatform", version = "0.4.0" }
# TODO Replace once https://github.com/zhanghai/ComposePreference goes multiplatform
compose-settings = { module = "com.github.alorma.compose-settings:ui-tiles", version.ref = "compose-settings" }
compose-settings-extended = { module = "com.github.alorma.compose-settings:ui-tiles-extended", version.ref = "compose-settings" }

compose-calendar = { module = "com.kizitonwose.calendar:compose-multiplatform", version = "2.5.4" }
jetlime = { module = "io.github.pushpalroy:jetlime", version = "3.0.0" }

buildkonfig = { module = "com.codingfeline.buildkonfig:buildkonfig-gradle-plugin", version.ref = "buildkonfig" }
reveal-core = { module = "com.svenjacobs.reveal:reveal-core", version.ref = "reveal" }
reveal-shapes = { module = "com.svenjacobs.reveal:reveal-shapes", version.ref = "reveal" }

[bundles]
ktor = ["ktor-core", "ktor-logging", "ktor-content-negotiation", "ktor-serialization-kotlinx-json"]
koin = ["koin-compose", "koin-core", "koin-compose-viewmodel", "koin-core-viewmodel"]
datastore = ["datastore-core", "datastore-preferences"]
voyager = ["voyager-navigator", "voyager-transitions"]
coil = ["coil-core", "coil-compose-core", "coil-compose", "coil-network-ktor"]
compose-settings = ["compose-settings", "compose-settings-extended"]
reveal = ["reveal-core", "reveal-shapes"]

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
moko-resources = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "moko" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
buildkonfig = { id = "com.codingfeline.buildkonfig", version.ref = "buildkonfig" }